const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');


const token = '7538141342:AAHXdvc1DbiIXaln0wWBzvDsuCQdZn4l6Ds';
const bot = new TelegramBot(token, { polling: true });

const adminChatId = 6376419421;

const welcomeMessage = `
üìπ –ü—Ä–∏–≤–µ—Ç! 

–ú—ã –∫–æ–º–∞–Ω–¥–∞ –±—Ä–µ–Ω–¥–∞ 4Hair!

–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –∞ —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ üòä
`;

// –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
const userStates = {};

// –í–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const STATES = {
    STARTED: 'STARTED',
    ASK_NAME: 'ASK_NAME',
    ASK_PHONE: 'ASK_PHONE',
    ASK_CITY: 'ASK_CITY',
    ASK_STATUS: 'ASK_STATUS',
    ASK_CUSTOM_STATUS: 'ASK_CUSTOM_STATUS',
    SERVICES: 'SERVICES',
    COUNTDOWN: 'COUNTDOWN',
};

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ chatId –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
bot.on('message', (msg) => {
    console.log(`Received message from chatId: ${msg.chat.id}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    userStates[chatId] = { 
        state: STATES.STARTED,
        userData: {} 
    }; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
    bot.sendVideo(chatId, 'https://videos2.sendvid.com/bd/cd/8swcjf60.mp4?validfrom=1728307302&validto=1728321702&rate=180k&ip=18.185.69.117&hash=9RBrnTHkLifnULgn%2Fl3%2FfdOIeaM%3D', {
        caption: welcomeMessage,
        reply_markup: {
            inline_keyboard: [
                [{ text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data: 'continue_name' }]
            ]
        },
        width: 720,
        height: 1280
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–ª–±—ç–∫–æ–≤
bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;

    if (!userStates[chatId]) {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
        bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥–æ–π /start.');
        return;
    }

    const userState = userStates[chatId];
    const userData = userState.userData;

    switch (query.data) {
        case 'continue_name':
            askName(chatId);
            break;
        case 'status_master':
        case 'status_store':
        case 'status_owner':
            handleStatusSelection(chatId, query.data);
            break;
        case 'status_other':
            askCustomStatus(chatId);
            break;
        case 'continue_services':
            sendNextStep(chatId);
            break;
        case 'service_shop':
        case 'service_training':
        case 'service_extensions':
            handleServiceContinuation(chatId, query.data);
            break;
        case 'start_countdown':
            startCountdown(chatId);
            break;
        default:
            bot.sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.');
    }

    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback_query, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
    bot.answerCallbackQuery(query.id).catch(console.error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, —è–≤–ª—è—é—â–∏–µ—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏–ª–∏ –∫–æ–ª–±—ç–∫–∞–º–∏
    if (msg.text.startsWith('/')) return;

    if (!userStates[chatId] || !userStates[chatId].state) return;

    const userState = userStates[chatId];
    const userData = userState.userData;
    const currentState = userState.state;

    switch (currentState) {
        case STATES.ASK_NAME:
            userData.name = msg.text.trim();
            userState.state = STATES.ASK_PHONE;
            askPhone(chatId);
            break;

        case STATES.ASK_PHONE:
            const phone = msg.text.trim();
            const phoneRegex = /^\+?[0-9]{10,15}$/;

            if (phoneRegex.test(phone)) {
                userData.phone = phone;
                userState.state = STATES.ASK_CITY;
                askCity(chatId);
            } else {
                bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü—Ä–∏–º–µ—Ä: +79001234567');
            }
            break;

        case STATES.ASK_CITY:
            userData.city = msg.text.trim();
            userState.state = STATES.ASK_STATUS;
            askStatus(chatId);
            break;

        case STATES.ASK_CUSTOM_STATUS:
            userData.status = msg.text.trim();
            sendToAdmin(userData);
            sendNextStep(chatId);
            userState.state = STATES.SERVICES;
            break;

        default:
            // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            break;
    }
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∏–º–µ–Ω–∏
function askName(chatId) {
    userStates[chatId].state = STATES.ASK_NAME;
    bot.sendMessage(chatId, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function askPhone(chatId) {
    userStates[chatId].state = STATES.ASK_PHONE;
    bot.sendMessage(chatId, '–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü—Ä–∏–º–µ—Ä: +79001234567');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≥–æ—Ä–æ–¥–∞
function askCity(chatId) {
    userStates[chatId].state = STATES.ASK_CITY;
    bot.sendMessage(chatId, '–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞
function askStatus(chatId) {
    userStates[chatId].state = STATES.ASK_STATUS;
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ç—É—Å:', {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–ú–∞—Å—Ç–µ—Ä', callback_data: 'status_master' }],
                [{ text: '–ú–∞–≥–∞–∑–∏–Ω', callback_data: 'status_store' }],
                [{ text: '–í–ª–∞–¥–µ–ª–µ—Ü —Å—Ç—É–¥–∏–∏', callback_data: 'status_owner' }],
                [{ text: '–î—Ä—É–≥–æ–µ', callback_data: 'status_other' }]
            ]
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
function askCustomStatus(chatId) {
    userStates[chatId].state = STATES.ASK_CUSTOM_STATUS;
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ç—É—Å:');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞
function handleStatusSelection(chatId, status) {
    const userData = userStates[chatId].userData;

    if (status === 'status_other') {
        askCustomStatus(chatId);
    } else {
        userData.status = status === 'status_master' ? '–ú–∞—Å—Ç–µ—Ä' :
                          status === 'status_store' ? '–ú–∞–≥–∞–∑–∏–Ω' : '–í–ª–∞–¥–µ–ª–µ—Ü —Å—Ç—É–¥–∏–∏';
        sendToAdmin(userData);
        sendNextStep(chatId);
        userStates[chatId].state = STATES.SERVICES;
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω—É
function sendToAdmin(userData) {
    const messageToAdmin = `
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏–ª —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:
–ò–º—è: ${userData.name}
–ì–æ—Ä–æ–¥: ${userData.city}
–¢–µ–ª–µ—Ñ–æ–Ω: ${userData.phone}
–°—Ç–∞—Ç—É—Å: ${userData.status}
    `;
    bot.sendMessage(adminChatId, messageToAdmin).catch(console.error);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ—Ä–≤–∏—Å–∞—Ö
function sendNextStep(chatId) {
    bot.sendMessage(chatId, '–°—É–ø–µ—Ä üôå').then(() => {
        setTimeout(() => {
            bot.sendMessage(chatId, '–†–∞—Å—Å–∫–∞–∂–µ–º, —á–µ–º –º—ã –º–æ–∂–µ–º –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã:', {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–ú–∞–≥–∞–∑–∏–Ω –≤–æ–ª–æ—Å', callback_data: 'service_shop' }],
                        [{ text: '–û–±—É—á–µ–Ω–∏–µ', callback_data: 'service_training' }],
                        [{ text: '–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ª–µ–Ω—Ç –∏ —Ç—Ä–µ—Å—Å–æ–≤', callback_data: 'service_extensions' }]
                    ]
                }
            });
        }, 500);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
function handleServiceContinuation(chatId, service) {
    switch (service) {
        case 'service_shop':
            bot.sendMediaGroup(chatId, [
                { type: 'photo', media: './1.jfif' },
                { type: 'photo', media: './2.jfif' },
                { type: 'photo', media: './3.jfif' }
            ]).then(() => {
                bot.sendMessage(chatId, `–ú–∞–≥–∞–∑–∏–Ω –≤–æ–ª–æ—Å : https://t.me/shop4hair`, {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–∞–ª—å—à–µ', callback_data: 'start_countdown' }]
                        ]
                    }
                });
            }).catch(console.error);
            break;

        case 'service_training':
            bot.sendMessage(chatId, `–û–±—É—á–µ–Ω–∏–µ –≤—Å–µ–º –≤–∏–¥–∞–º –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—è. –ú–∏–Ω–∏ –≥—Ä—É–ø–ø–∞, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ, –æ–Ω–ª–∞–π–Ω\n\nhttps://4hair.ru`, {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–î–∞–ª—å—à–µ', callback_data: 'start_countdown' }]
                    ]
                }
            });
            break;

        case 'service_extensions':
            bot.sendMediaGroup(chatId, [
                { type: 'photo', media: './4.jfif' },
                { type: 'photo', media: './5.jfif' },
                { type: 'photo', media: './6.jfif' }
            ]).then(() => {
                bot.sendMessage(chatId, `–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ª–µ–Ω—Ç –∏ —Ç—Ä–µ—Å—Å–æ–≤ –∏–∑ –¥–µ—Ç—Å–∫–∏—Ö –≤–æ–ª–æ—Å \n\nhttps://4hair.ru`, {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–ù–∞—á–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à', callback_data: 'start_countdown' }]
                        ]
                    }
                });
            }).catch(console.error);
            break;

        default:
            bot.sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —É—Å–ª—É–≥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.');
    }
}

// –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç
function startCountdown(chatId) {
    const countdownEndDate = new Date('2024-10-16T00:00:00'); 
    let remainingTime = Math.floor((countdownEndDate - new Date()) / 1000);

    const countdownMessage = (remainingTime) => {
        const days = Math.floor(remainingTime / (24 * 3600));
        const hours = Math.floor((remainingTime % (24 * 3600)) / 3600);
        const minutes = Math.floor((remainingTime % 3600) / 60);
        const seconds = remainingTime % 60;

        return `
        –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Å—Ç–∞–ª–æ—Å—å:
        ${days} –¥–Ω–µ–π, ${hours} —á–∞—Å–æ–≤, ${minutes} –º–∏–Ω—É—Ç –∏ ${seconds} —Å–µ–∫—É–Ω–¥.
        `;
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–∞–π–º–µ—Ä–∞
    const participationMessage = `
    üí∏ –í—ã–∏–≥—Ä–∞–π 100.000‚ÇΩ –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤–æ–ª–æ—Å!

    –î–ª—è —É—á–∞—Å—Ç–∏—è:
    1. –û—Å—Ç–∞–≤—å —Å–≤–æ–∏ –≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    2. –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–∞–≥–∞–∑–∏–Ω –≤–æ–ª–æ—Å: [Shop 4Hair](https://t.me/shop4hair)
    3. –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –¢–ì –∫–∞–Ω–∞–ª: [FOURHAIR](https://t.me/FOURHAIR)

    –ñ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞.

    –ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏! üçÄ
    `;

    bot.sendMessage(chatId, participationMessage, { parse_mode: 'Markdown' }).then(() => {
        // –ü–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
        bot.sendMessage(chatId, countdownMessage(remainingTime)).then((sentMessage) => {
            userStates[chatId].state = STATES.COUNTDOWN;
            const interval = setInterval(() => {
                remainingTime = Math.floor((countdownEndDate - new Date()) / 1000);
                if (remainingTime >= 0) {
                    bot.editMessageText(countdownMessage(remainingTime), {
                        chat_id: chatId,
                        message_id: sentMessage.message_id,
                    }).catch(() => clearInterval(interval));
                } else {
                    clearInterval(interval);
                    bot.sendMessage(chatId, '‚è≥ –í—Ä–µ–º—è –≤—ã—à–ª–æ!');
                }
            }, 1000);
        });
    });
}
